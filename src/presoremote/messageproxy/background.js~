chrome.app.runtime.onLaunched.addListener(function() {
    console.log('Extension loaded');
    startServer();
});
function $(id) {
  return document.getElementById(id);
}

function log(text) {
    console.log(text);
}

function startServer() {
    var port = 9999;
    var isServer = false;
    if (http.Server && http.WebSocketServer) {
        // Listen for HTTP connections.
        var server = new http.Server();
        var wsServer = new http.WebSocketServer(server);
        server.listen(port);

        server.addEventListener('request', function(req) {
            var url = req.headers.url;
            if (url == '/')
            url = '/index.html';
            // Serve the pages of this chrome application.
            req.serveUrl(url);
            return true;
        });

        // A list of connected websockets.
        var connectedSockets = [];

        wsServer.addEventListener('request', function(req) {
            log('Client connected');
            var socket = req.accept();
            connectedSockets.push(socket);

            // When a message is received on one socket, rebroadcast it on all
            // connected sockets.
            socket.addEventListener('message', function(e) {
//                for (var i = 0; i < connectedSockets.length; i++)
                //                connectedSockets[i].send(e.data);
                log(e.data);
            });

            // When a socket is closed, remove it from the list of connected sockets.
            socket.addEventListener('close', function() {
                log('Client disconnected');
                for (var i = 0; i < connectedSockets.length; i++) {
                    if (connectedSockets[i] == socket) {
                        connectedSockets.splice(i, 1);
                        break;
                    }
                }
            });
            return true;
        });

        chrome.runtime.onMessageExternal.addListener(
            function(request, sender, sendResponse) {
                console.log(sender.tab ?
                    "from a content script:" + sender.tab.url :
                    "from the extension");
                if (request.greeting == "hello")
                    sendResponse({farewell: "goodbye"});
            });
    }
}
